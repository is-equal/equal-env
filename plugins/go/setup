#!/usr/bin/env sh

EQ_GO_DIR="${EQ_TOOLS}/go"
EQ_GO_VERSION=$(get_tool_version go)
EQ_GO_HOME="${EQ_GO_DIR}/${EQ_GO_VERSION}"
EQ_GO_BIN="${EQ_GO_HOME}/bin"
EQ_GO_EXECUTABLE="${EQ_GO_BIN}/go"
EQ_GOFMT_EXECUTABLE="${EQ_GO_BIN}/gofmt"

get_arch() {
  local arch
  arch="$(uname -m | tr '[:upper:]' '[:lower:]')"

  case "${arch}" in
    x86_64 | amd64) arch="amd64" ;;
    armv6) arch="armv6l" ;;
    *386*) arch="386" ;;
    arm64 | aarch64) arch="arm64" ;;
  esac

  printf '%s' "${arch}"
}

get_os() {
  local result="$(uname -s | tr '[:upper:]' '[:lower:]')"

  printf '%s' "${result}"
}

set_go() {
  local EQ_ROOT=$(dirname ${BASH_SOURCE[0]})

  ln -Fs "${EQ_ROOT}/go-run" "${EQ_SHIMS}/go"
  chmod +x "${EQ_SHIMS}/go"

  ln -Fs "${EQ_ROOT}/gofmt-run" "${EQ_SHIMS}/gofmt"
  chmod +x "${EQ_SHIMS}/gofmt"

  echo "Using go@${EQ_GO_VERSION}"
}

install_go() {
  mkdir -p "${EQ_GO_HOME}"

  local os=$(get_os)
  local arch=$(get_arch)
  local archive_url="https://go.dev/dl/"
  local archive="go${EQ_GO_VERSION}.${os}-${arch}"
  local archive_ext=".tar.gz"

  archive_url="${archive_url}${archive}${archive_ext}"

  if [ ! -f "${EQ_GO_EXECUTABLE}" ]; then
    echo "Downloading go@${EQ_GO_VERSION}"

    download "${archive_url}" > "${EQ_GO_HOME}/${archive}${archive_ext}"
    tar -xf "${EQ_GO_HOME}/${archive}${archive_ext}" -C "${EQ_GO_HOME}"
    cp -r "${EQ_GO_HOME}/go/" "${EQ_GO_HOME}"
    chmod +x "${EQ_GO_EXECUTABLE}"

    rm -rf "${EQ_GO_HOME}/go"
    rm "${EQ_GO_HOME}/${archive}${archive_ext}"
  fi

  set_go
}

if [ ! "$EQ_GO_VERSION" = "" ]; then
  echo "\n=> go"
  install_go
fi
